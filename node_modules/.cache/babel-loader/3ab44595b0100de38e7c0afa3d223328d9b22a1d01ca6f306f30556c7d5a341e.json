{"ast":null,"code":"var _jsxFileName = \"/Users/josemigarcia/weather-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [error, setError] = useState('');\n  const fetchWeather = async () => {\n    try {\n      setError('');\n      const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\n\n      // Obtener el clima actual\n      const weatherRes = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`);\n      setWeather(weatherRes.data);\n\n      // Obtener el pronóstico de los próximos 5 días\n      const forecastRes = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`);\n      const forecastData = forecastRes.data.list;\n\n      // Agrupar los pronósticos por día\n      const groupedForecast = forecastData.reduce((acc, curr) => {\n        const date = curr.dt_txt.split(' ')[0]; // Obtiene la fecha (YYYY-MM-DD)\n        if (!acc[date]) {\n          acc[date] = {\n            tempSum: 0,\n            count: 0,\n            weather: curr.weather[0].description,\n            icon: curr.weather[0].icon\n          };\n        }\n        acc[date].tempSum += curr.main.temp;\n        acc[date].count += 1;\n        return acc;\n      }, {});\n\n      // Calcular la temperatura promedio por día\n      const forecastArray = Object.keys(groupedForecast).map(date => {\n        const day = groupedForecast[date];\n        return {\n          date,\n          tempAvg: (day.tempSum / day.count).toFixed(1),\n          // Temperatura promedio\n          description: day.weather,\n          icon: day.icon\n        };\n      });\n      setForecast(forecastArray); // Seteamos los días agrupados\n    } catch (err) {\n      setWeather(null);\n      setForecast(null);\n      setError('Ciudad no encontrada o error en la API');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"App del Clima\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: city,\n      placeholder: \"Escribe una ciudad...\",\n      onChange: e => setCity(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchWeather,\n      children: \"Buscar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weather.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weather.weather[0].main\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperatura: \", weather.main.temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humedad: \", weather.main.humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Viento: \", weather.wind.speed, \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`,\n        alt: \"icono clima\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), forecast && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Pron\\xF3stico de los pr\\xF3ximos 5 d\\xEDas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-list\",\n        children: forecast.map((forecastItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: new Date(forecastItem.date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [forecastItem.tempAvg, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: forecastItem.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://openweathermap.org/img/wn/${forecastItem.icon}@2x.png`,\n            alt: \"icono clima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+oc/yVMrRoogOy1GYe8GYsDjrNA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","city","setCity","weather","setWeather","forecast","setForecast","error","setError","fetchWeather","apiKey","process","env","REACT_APP_WEATHER_API_KEY","weatherRes","get","data","forecastRes","forecastData","list","groupedForecast","reduce","acc","curr","date","dt_txt","split","tempSum","count","description","icon","main","temp","forecastArray","Object","keys","map","day","tempAvg","toFixed","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","placeholder","onChange","e","target","onClick","style","color","name","humidity","wind","speed","src","alt","forecastItem","index","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/josemigarcia/weather-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [error, setError] = useState('');\n\n  const fetchWeather = async () => {\n    try {\n      setError('');\n      const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\n\n      // Obtener el clima actual\n      const weatherRes = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`\n      );\n      setWeather(weatherRes.data);\n\n      // Obtener el pronóstico de los próximos 5 días\n      const forecastRes = await axios.get(\n        `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`\n      );\n\n      const forecastData = forecastRes.data.list;\n      \n      // Agrupar los pronósticos por día\n      const groupedForecast = forecastData.reduce((acc, curr) => {\n        const date = curr.dt_txt.split(' ')[0]; // Obtiene la fecha (YYYY-MM-DD)\n        if (!acc[date]) {\n          acc[date] = {\n            tempSum: 0,\n            count: 0,\n            weather: curr.weather[0].description,\n            icon: curr.weather[0].icon\n          };\n        }\n        acc[date].tempSum += curr.main.temp;\n        acc[date].count += 1;\n        return acc;\n      }, {});\n\n      // Calcular la temperatura promedio por día\n      const forecastArray = Object.keys(groupedForecast).map((date) => {\n        const day = groupedForecast[date];\n        return {\n          date,\n          tempAvg: (day.tempSum / day.count).toFixed(1), // Temperatura promedio\n          description: day.weather,\n          icon: day.icon\n        };\n      });\n\n      setForecast(forecastArray); // Seteamos los días agrupados\n    } catch (err) {\n      setWeather(null);\n      setForecast(null);\n      setError('Ciudad no encontrada o error en la API');\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>App del Clima</h1>\n      <input\n        type=\"text\"\n        value={city}\n        placeholder=\"Escribe una ciudad...\"\n        onChange={(e) => setCity(e.target.value)}\n      />\n      <button onClick={fetchWeather}>Buscar</button>\n\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      {weather && (\n        <div className=\"weather-box\">\n          <h2>{weather.name}</h2>\n          <p>{weather.weather[0].main}</p>\n          <p>Temperatura: {weather.main.temp}°C</p>\n          <p>Humedad: {weather.main.humidity}%</p>\n          <p>Viento: {weather.wind.speed} m/s</p>\n          <img\n            src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n            alt=\"icono clima\"\n          />\n        </div>\n      )}\n\n      {forecast && (\n        <div className=\"forecast\">\n          <h3>Pronóstico de los próximos 5 días:</h3>\n          <div className=\"forecast-list\">\n            {forecast.map((forecastItem, index) => (\n              <div key={index} className=\"forecast-item\">\n                <p>{new Date(forecastItem.date).toLocaleDateString()}</p>\n                <p>{forecastItem.tempAvg}°C</p>\n                <p>{forecastItem.description}</p>\n                <img\n                  src={`https://openweathermap.org/img/wn/${forecastItem.icon}@2x.png`}\n                  alt=\"icono clima\"\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}