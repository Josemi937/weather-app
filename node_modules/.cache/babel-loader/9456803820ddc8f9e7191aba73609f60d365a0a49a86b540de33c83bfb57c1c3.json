{"ast":null,"code":"var _jsxFileName = \"/Users/josemigarcia/weather-app/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [error, setError] = useState('');\n  const setBackground = (weatherType, weatherDescription) => {\n    const body = document.querySelector(\"body\");\n    if (weatherType === \"Clouds\" && weatherDescription === \"few clouds\") {\n      body.style.backgroundImage = \"url('/images/fewclouds.jpg')\";\n    } else {\n      switch (weatherType) {\n        case \"Clear\":\n          body.style.backgroundImage = \"url('/images/clear-sky.jpg')\";\n          break;\n        case \"Rain\":\n          body.style.backgroundImage = \"url('/images/Rain.jpg')\";\n          break;\n        case \"Clouds\":\n          body.style.backgroundImage = \"url('/images/cloudy.jpg')\";\n          break;\n        case \"Snow\":\n          body.style.backgroundImage = \"url('/images/snow.jpg')\";\n          break;\n        case \"Thunderstorm\":\n          body.style.backgroundImage = \"url('/images/thunderstorm.jpg')\";\n          break;\n        case \"Drizzle\":\n          body.style.backgroundImage = \"url('/images/drizzle.jpg')\";\n          break;\n        default:\n          body.style.backgroundImage = \"url('/images/default.jpg')\";\n      }\n    }\n    body.style.backgroundSize = \"cover\";\n    body.style.backgroundPosition = \"center center\";\n  };\n  const getLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n        const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\n        const weatherRes = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`);\n        setWeather(weatherRes.data);\n        const weatherType = weatherRes.data.weather[0].main;\n        const weatherDescription = weatherRes.data.weather[0].description;\n        setBackground(weatherType, weatherDescription);\n        const forecastRes = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`);\n        const forecastData = forecastRes.data.list;\n        const groupedForecast = forecastData.reduce((acc, curr) => {\n          const date = curr.dt_txt.split(' ')[0];\n          if (!acc[date]) {\n            acc[date] = {\n              tempSum: 0,\n              count: 0,\n              weather: curr.weather[0].description,\n              icon: curr.weather[0].icon\n            };\n          }\n          acc[date].tempSum += curr.main.temp;\n          acc[date].count += 1;\n          return acc;\n        }, {});\n        const forecastArray = Object.keys(groupedForecast).map(date => {\n          const day = groupedForecast[date];\n          return {\n            date,\n            tempAvg: (day.tempSum / day.count).toFixed(1),\n            description: day.weather,\n            icon: day.icon\n          };\n        });\n        setForecast(forecastArray);\n      }, () => {\n        setError('No se pudo obtener la ubicación');\n      });\n    } else {\n      setError('Geolocalización no disponible');\n    }\n  };\n  const fetchWeather = async () => {\n    if (city) {\n      try {\n        setError('');\n        const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\n        const weatherRes = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`);\n        setWeather(weatherRes.data);\n        const weatherType = weatherRes.data.weather[0].main;\n        const weatherDescription = weatherRes.data.weather[0].description;\n        setBackground(weatherType, weatherDescription);\n        const forecastRes = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`);\n        const forecastData = forecastRes.data.list;\n        const groupedForecast = forecastData.reduce((acc, curr) => {\n          const date = curr.dt_txt.split(' ')[0];\n          if (!acc[date]) {\n            acc[date] = {\n              tempSum: 0,\n              count: 0,\n              weather: curr.weather[0].description,\n              icon: curr.weather[0].icon\n            };\n          }\n          acc[date].tempSum += curr.main.temp;\n          acc[date].count += 1;\n          return acc;\n        }, {});\n        const forecastArray = Object.keys(groupedForecast).map(date => {\n          const day = groupedForecast[date];\n          return {\n            date,\n            tempAvg: (day.tempSum / day.count).toFixed(1),\n            description: day.weather,\n            icon: day.icon\n          };\n        });\n        setForecast(forecastArray);\n      } catch (err) {\n        setWeather(null);\n        setForecast(null);\n        setError('Ciudad no encontrada o error en la API');\n      }\n    } else {\n      getLocation();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"App del Clima\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: city,\n      placeholder: \"Escribe una ciudad...\",\n      onChange: e => setCity(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchWeather,\n      children: \"Buscar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weather.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weather.weather[0].main\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperatura: \", weather.main.temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humedad: \", weather.main.humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Viento: \", weather.wind.speed, \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`,\n        alt: \"icono clima\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), forecast && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Pron\\xF3stico de los pr\\xF3ximos 5 d\\xEDas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-list\",\n        children: forecast.map((forecastItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: new Date(forecastItem.date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [forecastItem.tempAvg, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: forecastItem.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://openweathermap.org/img/wn/${forecastItem.icon}@2x.png`,\n            alt: \"icono clima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+oc/yVMrRoogOy1GYe8GYsDjrNA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","city","setCity","weather","setWeather","forecast","setForecast","error","setError","setBackground","weatherType","weatherDescription","body","document","querySelector","style","backgroundImage","backgroundSize","backgroundPosition","getLocation","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","apiKey","process","env","REACT_APP_WEATHER_API_KEY","weatherRes","get","data","main","description","forecastRes","forecastData","list","groupedForecast","reduce","acc","curr","date","dt_txt","split","tempSum","count","icon","temp","forecastArray","Object","keys","map","day","tempAvg","toFixed","fetchWeather","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","placeholder","onChange","e","target","onClick","color","name","humidity","wind","speed","src","alt","forecastItem","index","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/josemigarcia/weather-app/src/App.js"],"sourcesContent":["// App.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [error, setError] = useState('');\n\n  const setBackground = (weatherType, weatherDescription) => {\n    const body = document.querySelector(\"body\");\n\n    if (weatherType === \"Clouds\" && weatherDescription === \"few clouds\") {\n      body.style.backgroundImage = \"url('/images/fewclouds.jpg')\";\n    } else {\n      switch (weatherType) {\n        case \"Clear\":\n          body.style.backgroundImage = \"url('/images/clear-sky.jpg')\";\n          break;\n        case \"Rain\":\n          body.style.backgroundImage = \"url('/images/Rain.jpg')\";\n          break;\n        case \"Clouds\":\n          body.style.backgroundImage = \"url('/images/cloudy.jpg')\";\n          break;\n        case \"Snow\":\n          body.style.backgroundImage = \"url('/images/snow.jpg')\";\n          break;\n        case \"Thunderstorm\":\n          body.style.backgroundImage = \"url('/images/thunderstorm.jpg')\";\n          break;\n        case \"Drizzle\":\n          body.style.backgroundImage = \"url('/images/drizzle.jpg')\";\n          break;\n        default:\n          body.style.backgroundImage = \"url('/images/default.jpg')\";\n      }\n    }\n\n    body.style.backgroundSize = \"cover\";\n    body.style.backgroundPosition = \"center center\";\n  };\n\n  const getLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async (position) => {\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n        const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\n\n        const weatherRes = await axios.get(\n          `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`\n        );\n        setWeather(weatherRes.data);\n\n        const weatherType = weatherRes.data.weather[0].main;\n        const weatherDescription = weatherRes.data.weather[0].description;\n        setBackground(weatherType, weatherDescription);\n\n        const forecastRes = await axios.get(\n          `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`\n        );\n\n        const forecastData = forecastRes.data.list;\n\n        const groupedForecast = forecastData.reduce((acc, curr) => {\n          const date = curr.dt_txt.split(' ')[0];\n          if (!acc[date]) {\n            acc[date] = {\n              tempSum: 0,\n              count: 0,\n              weather: curr.weather[0].description,\n              icon: curr.weather[0].icon\n            };\n          }\n          acc[date].tempSum += curr.main.temp;\n          acc[date].count += 1;\n          return acc;\n        }, {});\n\n        const forecastArray = Object.keys(groupedForecast).map((date) => {\n          const day = groupedForecast[date];\n          return {\n            date,\n            tempAvg: (day.tempSum / day.count).toFixed(1),\n            description: day.weather,\n            icon: day.icon\n          };\n        });\n\n        setForecast(forecastArray);\n\n      }, () => {\n        setError('No se pudo obtener la ubicación');\n      });\n    } else {\n      setError('Geolocalización no disponible');\n    }\n  };\n\n  const fetchWeather = async () => {\n    if (city) {\n      try {\n        setError('');\n        const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\n\n        const weatherRes = await axios.get(\n          `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`\n        );\n        setWeather(weatherRes.data);\n\n        const weatherType = weatherRes.data.weather[0].main;\n        const weatherDescription = weatherRes.data.weather[0].description;\n        setBackground(weatherType, weatherDescription);\n\n        const forecastRes = await axios.get(\n          `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`\n        );\n\n        const forecastData = forecastRes.data.list;\n\n        const groupedForecast = forecastData.reduce((acc, curr) => {\n          const date = curr.dt_txt.split(' ')[0];\n          if (!acc[date]) {\n            acc[date] = {\n              tempSum: 0,\n              count: 0,\n              weather: curr.weather[0].description,\n              icon: curr.weather[0].icon\n            };\n          }\n          acc[date].tempSum += curr.main.temp;\n          acc[date].count += 1;\n          return acc;\n        }, {});\n\n        const forecastArray = Object.keys(groupedForecast).map((date) => {\n          const day = groupedForecast[date];\n          return {\n            date,\n            tempAvg: (day.tempSum / day.count).toFixed(1),\n            description: day.weather,\n            icon: day.icon\n          };\n        });\n\n        setForecast(forecastArray);\n      } catch (err) {\n        setWeather(null);\n        setForecast(null);\n        setError('Ciudad no encontrada o error en la API');\n      }\n    } else {\n      getLocation();\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>App del Clima</h1>\n      <input\n        type=\"text\"\n        value={city}\n        placeholder=\"Escribe una ciudad...\"\n        onChange={(e) => setCity(e.target.value)}\n      />\n      <button onClick={fetchWeather}>Buscar</button>\n\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      {weather && (\n        <div className=\"weather-box\">\n          <h2>{weather.name}</h2>\n          <p>{weather.weather[0].main}</p>\n          <p>Temperatura: {weather.main.temp}°C</p>\n          <p>Humedad: {weather.main.humidity}%</p>\n          <p>Viento: {weather.wind.speed} m/s</p>\n          <img\n            src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n            alt=\"icono clima\"\n          />\n        </div>\n      )}\n\n      {forecast && (\n        <div className=\"forecast\">\n          <h3>Pronóstico de los próximos 5 días:</h3>\n          <div className=\"forecast-list\">\n            {forecast.map((forecastItem, index) => (\n              <div key={index} className=\"forecast-item\">\n                <p>{new Date(forecastItem.date).toLocaleDateString()}</p>\n                <p>{forecastItem.tempAvg}°C</p>\n                <p>{forecastItem.description}</p>\n                <img\n                  src={`https://openweathermap.org/img/wn/${forecastItem.icon}@2x.png`}\n                  alt=\"icono clima\"\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}