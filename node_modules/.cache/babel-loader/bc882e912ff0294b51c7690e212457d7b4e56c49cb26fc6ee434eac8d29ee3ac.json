{"ast":null,"code":"var _jsxFileName = \"/Users/josemigarcia/weather-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [error, setError] = useState('');\n\n  // Función para cambiar el fondo dependiendo del clima\n  const setBackground = weatherType => {\n    const body = document.querySelector(\"body\");\n    switch (weatherType) {\n      case \"Clear\":\n        body.style.backgroundImage = \"url('/images/clear-sky.jpg')\";\n        break;\n      case \"Rain\":\n        body.style.backgroundImage = \"url('/images/rain.jpg')\";\n        break;\n      case \"Clouds\":\n        body.style.backgroundImage = \"url('/images/cloudy.jpg')\";\n        break;\n      case \"Snow\":\n        body.style.backgroundImage = \"url('/images/snow.jpg')\";\n        break;\n      case \"Thunderstorm\":\n        body.style.backgroundImage = \"url('/images/thunderstorm.jpg')\";\n        break;\n      case \"Drizzle\":\n        body.style.backgroundImage = \"url('/images/drizzle.jpg')\";\n        break;\n      default:\n        body.style.backgroundImage = \"url('/images/default.jpg')\";\n    }\n\n    // Asegurarse de que el fondo cubra toda la pantalla\n    body.style.backgroundSize = \"cover\";\n    body.style.backgroundPosition = \"center center\";\n  };\n  const fetchWeather = async () => {\n    try {\n      setError('');\n      const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\n\n      // Obtener el clima actual\n      const weatherRes = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`);\n      setWeather(weatherRes.data);\n\n      // Cambiar el fondo según el tipo de clima\n      const weatherType = weatherRes.data.weather[0].main;\n      setBackground(weatherType);\n\n      // Obtener el pronóstico de los próximos 5 días\n      const forecastRes = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`);\n      const forecastData = forecastRes.data.list;\n\n      // Agrupar los pronósticos por día\n      const groupedForecast = forecastData.reduce((acc, curr) => {\n        const date = curr.dt_txt.split(' ')[0]; // Obtiene la fecha (YYYY-MM-DD)\n        if (!acc[date]) {\n          acc[date] = {\n            tempSum: 0,\n            count: 0,\n            weather: curr.weather[0].description,\n            icon: curr.weather[0].icon\n          };\n        }\n        acc[date].tempSum += curr.main.temp;\n        acc[date].count += 1;\n        return acc;\n      }, {});\n\n      // Calcular la temperatura promedio por día\n      const forecastArray = Object.keys(groupedForecast).map(date => {\n        const day = groupedForecast[date];\n        return {\n          date,\n          tempAvg: (day.tempSum / day.count).toFixed(1),\n          // Temperatura promedio\n          description: day.weather,\n          icon: day.icon\n        };\n      });\n      setForecast(forecastArray); // Seteamos los días agrupados\n    } catch (err) {\n      setWeather(null);\n      setForecast(null);\n      setError('Ciudad no encontrada o error en la API');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"App del Clima\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: city,\n      placeholder: \"Escribe una ciudad...\",\n      onChange: e => setCity(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchWeather,\n      children: \"Buscar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weather.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weather.weather[0].main\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperatura: \", weather.main.temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humedad: \", weather.main.humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Viento: \", weather.wind.speed, \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`,\n        alt: \"icono clima\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), forecast && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Pron\\xF3stico de los pr\\xF3ximos 5 d\\xEDas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-list\",\n        children: forecast.map((forecastItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: new Date(forecastItem.date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [forecastItem.tempAvg, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: forecastItem.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://openweathermap.org/img/wn/${forecastItem.icon}@2x.png`,\n            alt: \"icono clima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+oc/yVMrRoogOy1GYe8GYsDjrNA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","city","setCity","weather","setWeather","forecast","setForecast","error","setError","setBackground","weatherType","body","document","querySelector","style","backgroundImage","backgroundSize","backgroundPosition","fetchWeather","apiKey","process","env","REACT_APP_WEATHER_API_KEY","weatherRes","get","data","main","forecastRes","forecastData","list","groupedForecast","reduce","acc","curr","date","dt_txt","split","tempSum","count","description","icon","temp","forecastArray","Object","keys","map","day","tempAvg","toFixed","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","placeholder","onChange","e","target","onClick","color","name","humidity","wind","speed","src","alt","forecastItem","index","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/josemigarcia/weather-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [error, setError] = useState('');\n\n  // Función para cambiar el fondo dependiendo del clima\n  const setBackground = (weatherType) => {\n    const body = document.querySelector(\"body\");\n\n    switch (weatherType) {\n      case \"Clear\":\n        body.style.backgroundImage = \"url('/images/clear-sky.jpg')\";\n        break;\n      case \"Rain\":\n        body.style.backgroundImage = \"url('/images/rain.jpg')\";\n        break;\n      case \"Clouds\":\n        body.style.backgroundImage = \"url('/images/cloudy.jpg')\";\n        break;\n      case \"Snow\":\n        body.style.backgroundImage = \"url('/images/snow.jpg')\";\n        break;\n      case \"Thunderstorm\":\n        body.style.backgroundImage = \"url('/images/thunderstorm.jpg')\";\n        break;\n      case \"Drizzle\":\n        body.style.backgroundImage = \"url('/images/drizzle.jpg')\";\n        break;\n      default:\n        body.style.backgroundImage = \"url('/images/default.jpg')\";\n    }\n\n    // Asegurarse de que el fondo cubra toda la pantalla\n    body.style.backgroundSize = \"cover\";\n    body.style.backgroundPosition = \"center center\";\n  };\n\n  const fetchWeather = async () => {\n    try {\n      setError('');\n      const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\n\n      // Obtener el clima actual\n      const weatherRes = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`\n      );\n      setWeather(weatherRes.data);\n\n      // Cambiar el fondo según el tipo de clima\n      const weatherType = weatherRes.data.weather[0].main;\n      setBackground(weatherType);\n\n      // Obtener el pronóstico de los próximos 5 días\n      const forecastRes = await axios.get(\n        `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`\n      );\n\n      const forecastData = forecastRes.data.list;\n      \n      // Agrupar los pronósticos por día\n      const groupedForecast = forecastData.reduce((acc, curr) => {\n        const date = curr.dt_txt.split(' ')[0]; // Obtiene la fecha (YYYY-MM-DD)\n        if (!acc[date]) {\n          acc[date] = {\n            tempSum: 0,\n            count: 0,\n            weather: curr.weather[0].description,\n            icon: curr.weather[0].icon\n          };\n        }\n        acc[date].tempSum += curr.main.temp;\n        acc[date].count += 1;\n        return acc;\n      }, {});\n\n      // Calcular la temperatura promedio por día\n      const forecastArray = Object.keys(groupedForecast).map((date) => {\n        const day = groupedForecast[date];\n        return {\n          date,\n          tempAvg: (day.tempSum / day.count).toFixed(1), // Temperatura promedio\n          description: day.weather,\n          icon: day.icon\n        };\n      });\n\n      setForecast(forecastArray); // Seteamos los días agrupados\n    } catch (err) {\n      setWeather(null);\n      setForecast(null);\n      setError('Ciudad no encontrada o error en la API');\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>App del Clima</h1>\n      <input\n        type=\"text\"\n        value={city}\n        placeholder=\"Escribe una ciudad...\"\n        onChange={(e) => setCity(e.target.value)}\n      />\n      <button onClick={fetchWeather}>Buscar</button>\n\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      {weather && (\n        <div className=\"weather-box\">\n          <h2>{weather.name}</h2>\n          <p>{weather.weather[0].main}</p>\n          <p>Temperatura: {weather.main.temp}°C</p>\n          <p>Humedad: {weather.main.humidity}%</p>\n          <p>Viento: {weather.wind.speed} m/s</p>\n          <img\n            src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n            alt=\"icono clima\"\n          />\n        </div>\n      )}\n\n      {forecast && (\n        <div className=\"forecast\">\n          <h3>Pronóstico de los próximos 5 días:</h3>\n          <div className=\"forecast-list\">\n            {forecast.map((forecastItem, index) => (\n              <div key={index} className=\"forecast-item\">\n                <p>{new Date(forecastItem.date).toLocaleDateString()}</p>\n                <p>{forecastItem.tempAvg}°C</p>\n                <p>{forecastItem.description}</p>\n                <img\n                  src={`https://openweathermap.org/img/wn/${forecastItem.icon}@2x.png`}\n                  alt=\"icono clima\"\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}